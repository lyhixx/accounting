<?xml version="1.1" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<description>Spring公共配置 </description>
	<!-- 读取配置文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/application.properties" />
	
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.axdoc">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	

	<!-- 数据源配置, 使用druid连接池 -->
	<bean id="aisDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${ais.jdbc.driver}" />
		<property name="url" value="${ais.jdbc.url}" />
		<property name="username" value="${ais.jdbc.username}" />
		<property name="password" value="${ais.jdbc.password}" />
		<property name="filters" value="stat" />
		<!-- 申请连接的时候检测 -->
		<property name="testWhileIdle" value="true"></property>
		<!-- 检测连接 -->
		<property name="validationQuery" value="select 'x'"></property>
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="${jdbc.pool.maxIdle}" />
	</bean>
	
	
	<bean id="aisTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="aisDataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="aisTxManager" />

	<bean id="aisJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="aisDataSource" />
	</bean>
	
	<!-- 数据源配置, 使用druid连接池 -->
	<bean id="payDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${pay.jdbc.driver}" />
		<property name="url" value="${pay.jdbc.url}" />
		<property name="username" value="${pay.jdbc.username}" />
		<property name="password" value="${pay.jdbc.password}" />
		<property name="filters" value="stat" />
		<!-- 申请连接的时候检测 -->
		<property name="testWhileIdle" value="true"></property>
		<!-- 检测连接 -->
		<property name="validationQuery" value="select 'x'"></property>
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="${jdbc.pool.maxIdle}" />
	</bean>
	
	
	<bean id="payTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="payDataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="payTxManager" />

	<bean id="payJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="payDataSource" />
	</bean>
	
	<!-- 配置线程池 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="10" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="30000" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="20" />
		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="20000" />
	</bean>
	
	<import resource="redis_config.xml" />
	<import resource="mongodb.xml"/>
</beans>